API Document of GitMiningServer

Server address:http://106.75.5.61:8080/GitMiningServer/
Return types of all APIs are JSON Strings.

Repository query:
	URL:http://106.75.5.61:8080/GitMiningServer/repo?{param1=...}&{param2=...}&...
	Parameters:
		type=?
			stat:obtain statistics about server's repository data
				returns a JSON object containing attributes, "numOfRepo"	//Complete
				e.g. {"numOfRepo":3000}
			data:obtain data of certain repositories
				method=?
					spec:get a specific repository by its full name			//Complete
						param=full_name_of_the_repository
						e.g. .../repo?type=data&method=spec&param=gitmining
					search:get a list of repositories with a search parameter
						ATTENTION: The maximum size of returned list is 200, usually it's smaller than 200.
																			//Complete								
						param=JSON object of RepositorySearchParam
						e.g. .../repo?type=data&method=search&
							param={"langs":["JAVA_SCRIPT"],"cates":["ALL"],"keywords":["query","Library"],"sortStandard":"STARS_DESCENDING"}
					paged:get a list of repositories with a sort parameter	//Complete
						page=..  Start from 1
						numPerPage=..  No less than 1
						sort=no/forks/stars
					
User query:
	URL:http://106.75.5.61:8080/GitMiningServer/user?{param1=...}&{param2=...}&...
	Parameters:
		type=?
			stat:obtain statistics about server's user data
				returns a JSON object containing attributes, "numOfUser"	//Complete
				e.g. {"numOfUser":57000}
			data:obtain data of certain users								
				method=?
					spec:obtain data of specific user						//Complete
						param=login of the user
					paged:obtain a page of user data with a certain sort	//Complete
						page=?			starting from 1
						numPerPage=?	no less than 1
						sort=follower/no			
					search:obtain data with a search_param					//Complete
						param=JSON object of UserSearchParam
						
Statistic query:
	URL:http://106.75.5.61:8080/GitMiningServer/stat?{param1=...}&{param2=...}&...
	Paratemers:
		type=?
			general:obtain data from original GeneralStatisticsService			//Complete
				param=?
					UserDistOverFollower
					RepoDistOverFork
					RepoDistOverLanguage
					RepoDistOverCreateTime
					UserDistOverCreateTime
					RepoDistOverStar
					UserDistOverType		
			user:obtain data from original UserStatisticsService				//Complete
				param=(login_of_the_user)
					Returns UserRank in JSON
			repo:obtain data from original RepositoryStatisticsService			//Complete
				param=(fullname_of_the repository)
					Returns RepoRank in JSON
			
Recommended info query:
	URL:http://106.75.5.61:8080/GitMiningServer/recommend?{param1=...}&{param2=...}&...
																				//Complete
		type=?
			repo: original List<String> getRecommendRepos(Language language)	//Complete
				param=(Language name) 
					Not the name of enumeration, but the real name
					e.g. JavaScript  Ruby
			user: original List<String> getRecommendUsers(Language language)	//Complete
				param=(Language) 
			related: methods from UserListDataGetter							//Complete
				param=OwnedRepositories/
					StarredRepositories/
					SubscrippedRepositories/
					Followers/
					Followings
				login=(the login the the user)
		
		
Login request:
	URL:http://106.75.5.61:8080/GitMiningServer/login?{param1=...}&{param2=...}&...
																				//Complete
		login=(login of the user)
		pass=(password of the account)
		
		Return type: a JSON object with attributes "state" and "key"
			state:true/false		shows if the login and password is valid
			key:a string used for making requests, only exsits when login was successful
			e.g. {"state":true,"key":"123456"}
				{"state":false,"key":""}
				
				
                         ------!!ATTENTION!!---------
	After logging in, each HTTP GET requests should be attached with a
parameter,"key=******", with max age set to -1.
	When no parameter "key" is attached, a logging out or the shut down of browser
is expected.
                         ----------------------------
				
	
API hint:
	URL:http://106.75.5.61:8080/GitMiningServer/api?{param1=...}&{param2=...}&...
	Parameters:
		(non)----Get the API document. (This page)
		action=?
			test:Used for testing network connectivity, returns  {"message":"Connected."}
